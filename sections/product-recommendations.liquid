<div class="wrapper">
  <div
    class="product-recommendations my-8 py-4"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related"
  >
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h2 class="my-8 uppercase tracking-[1.5px] font-livvic text-[26px] lg:text-[30px]">Tambi√©n te puede interesar</h2>
      <div class="recommendation-carousel">
        <ul class="grid grid-cols-2 md:grid-cols-4 gap-4">
          {% for product in recommendations.products %}
            {% render 'product-card',  
            product_card : product,
            data_template : template,
          %}
          {% endfor %}
        </ul>
      </div>
    {% endif %}
  </div>
</div>  
  

{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
{% endjavascript %}

{% schema %}
  {
    "name": "Product recommendations",
    "settings": []
  }
{% endschema %}
